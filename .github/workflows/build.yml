name: NCLEXPower CI/CD Build

on:
  push:
    branches:
      - mdev
      - "feature/*"
      - "hotfix/*"
      - "release/*"
  pull_request:
    branches:
      - mdev
      - "feature/*"
      - "hotfix/*"
      - "release/*"

jobs:
  build_and_test_core_library:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Remove local dependencies from package.json
        run: |
          cd packages/core-library
          jq 'del(.devDependencies["@repo/eslint-config"]) | del(.devDependencies["@repo/typescript-config"])' package.json > temp.json && mv temp.json package.json

      - name: Install dependencies for core-library
        run: |
          cd packages/core-library
          npm install

      - name: Run tests with coverage for core-library
        run: |
          cd packages/core-library
          npm run test -- --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/core-library/coverage/**/coverage-final.json
          flags: unittests
          name: codecov-core-library

  tag_and_deploy:
    runs-on: ubuntu-latest
    needs: [build_and_test_core_library]

    outputs:
      BUILD_NUMBER: ${{ steps.build_info.outputs.BUILD_NUMBER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up date and build number
        id: build_info
        run: |
          DATE=$(date +"%Y%m%d")
          BUILD_FILE=".github/build_number.txt"

          # Initialize or read the build number
          if test -f "$BUILD_FILE"; then
            # File exists, read the last build number
            LAST_BUILD=$(cat $BUILD_FILE)
            if [[ $LAST_BUILD != $DATE-* ]]; then
              # Reset for a new day
              BUILD_NUMBER="$DATE-1000"
            else
              # Increment for the same day
              BUILD_SEQ=${LAST_BUILD##*-}
              BUILD_NUMBER="$DATE-$((BUILD_SEQ + 1))"
            fi
          else
            # First build, start the numbering
            BUILD_NUMBER="$DATE-1000"
          fi

          # Save the new build number for reference
          echo "$BUILD_NUMBER" > $BUILD_FILE
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "::set-output name=BUILD_NUMBER::$BUILD_NUMBER"

      - name: Commit and Tag the Build
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/build_number.txt  # Explicitly add the file to be tracked
          git commit -m "Update build number to ${{ steps.build_info.outputs.BUILD_NUMBER }}" || echo "No changes to commit"
          git tag ${{ steps.build_info.outputs.BUILD_NUMBER }}
          git push https://x-access-token:${GH_PAT}@github.com/NCLEXPower/nclexpower_turbo.git ${{ steps.build_info.outputs.BUILD_NUMBER }}

      - name: Deploy simulator to Vercel (Dev)
        if: github.ref == 'refs/heads/mdev'
        run: |
          cd apps/simulator
          npx vercel --prod --token ${{ secrets.NCLEX_VERCEL_TOKEN }} --scope digitalresolve

      - name: Deploy web-customer to Vercel (Dev)
        if: github.ref == 'refs/heads/mdev'
        run: |
          cd apps/web-customer
          npx vercel --prod --token ${{ secrets.NCLEX_VERCEL_TOKEN }} --scope digitalresolve
